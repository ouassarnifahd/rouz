#! /bin/sh

# fonts
FONT_SIZE=10
FONT_MONO="Hack Nerd Font Mono:size=$FONT_SIZE"
FONT_ICON="Noto Color Emoji:size=$FONT_SIZE"
FONT_CJK="Noto Sans Mono CJK JP:size=$FONT_SIZE"

# source colors
source $HOME/.cache/wal/colors.sh

COLOR_BACKGROUND="$background"
COLOR_FOREGROUND="$foreground"
COLOR_ICON="$color1"
COLOR_ACTIVE="$cursor"
COLOR_OCCUPIED="$color1"
COLOR_URGENT="$color15"

# Height of underlines / overlines
LINE_PLACEMENT="u"
LINE_HEIGHT="5"

# Panel clickable areas
MOUSE_AREAS="60"

# Panel wmname
PANEL_NAME="lemonblocks"

# Screen geometry
#SCREEN_HEIGHT=$(xrandr -q | grep Screen | awk '{print $10}' | sed s/,//)
#SCREEN_WIDTH=$(xrandr -q | grep Screen | awk '{print $8}')
PANEL_SCREEN=$1
SCREEN_HEIGHT=$(xrandr --listactivemonitors | grep "${PANEL_SCREEN}: " | cut -d'x' -f2 | cut -d'/' -f1)
SCREEN_WIDTH=$(xrandr --listactivemonitors | grep "${PANEL_SCREEN}: " | cut -d'x' -f1 | cut -d' ' -f4 | cut -d'/' -f1)
SCREEN_X=$(xrandr --listactivemonitors | grep "${PANEL_SCREEN}: " | cut -d'+' -f3)
SCREEN_Y=$(xrandr --listactivemonitors | grep "${PANEL_SCREEN}: " | cut -d'+' -f4 | cut -d' ' -f1)

# Panel geometry
PANEL_GAP=5
PANEL_HEIGHT=20
PANEL_WIDTH="$(($SCREEN_WIDTH - $(($PANEL_GAP * 2))))"
PANEL_X="$(($SCREEN_X + $PANEL_GAP))"
PANEL_Y="$(($PANEL_GAP))"
PANEL_GEOMETRY="${PANEL_WIDTH}x${PANEL_HEIGHT}+${PANEL_X}+${PANEL_Y}"

# FIFO
PANEL_FIFO="/tmp/lemonblocks"

bPOS=0; bSIG=1; bHANDLE=2; bUPDATE=3; bICON=4; bMSG=5;
mLC=1; mMC=2; mRC=3; mSU=4; mSD=5

setcolor() {
    echo "%{$1}"
}

setfg() {
    setcolor "F$1"
}
nofg="$(setfg -)"

setbg() {
    setcolor "B$1"
}
nobg="$(setbg -)"

setuo() {
    setcolor "U$1"
}
nouo="$(setuo -)"

setmouse() {
    mouse_l=""
    mouse_r=""
    for i in {1..5}; do
        if [ -n "${mouse[$i]}" ]; then
            mouse_l+="%{A$i:${mouse[$i]} &:}"
            mouse_r+="%{A$i}"
        fi
        # echo "A$i ${mouse[$i]}" >> ~/.panel_bar.log
    done
}

lnprint() {
    echo -e "\n$1" | head -c -1
}

serve() {
    status="$(handle 2>/dev/null)"
    [ -n "$status" ] || status="${block[$bMSG]} "
    # icon="\b"
    if [ -n "${block[$bICON]}" ]; then icon="%{F$COLOR_ICON}${block[$bICON]}%{F-} "; fi
    echo -e "\n${block[$bPOS]} $icon$mouse_l$status$mouse_r" | head -c -1
}

printblock() {
    serve
    if [ -z "${block[$bUPDATE]}" ]; then
        serve
    else
        while true; do
            serve
            sleep ${block[$bUPDATE]}
        done
    fi
}
