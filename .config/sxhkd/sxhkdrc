#
# wm independent hotkeys
#

# terminal emulator
super + Return
    st -f mono:pixelsize=14

# tabbed terminal emulator
super + shift + Return
    tabbed -c -n 'tabbed-st' -r 2 st -w '' -f mono:pixelsize=14

# program launcher
#super + {_,shift + }d
#    PATH=$HOME/.local/bin:$PATH rofi -show {run,window}
super + d
    source $HOME/.cache/wal/colors.sh; \
    rm -rf $HOME/.cache/dmenu_run; \
    PATH=$HOME/.local/bin:$PATH dmenu_run -nb $color0 -nf $color15 -sb $color1 -sf $color15 -fn mono:size=10 #-l 10

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
    {bspc quit,killall iceblocks && bspc wm -r}

# close and kill
super + {_,shift + }w
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
    bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
    bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
    bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
    bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + {shift + ,_}Tab
    bspc desktop -f {prev,next}.occupied

# focus the last node/desktop
super + {shift + ,_}twosuperior
    bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{ampersand,eacute,quotedbl,apostrophe,parenleft,minus,egrave,underscore,ccedilla,agrave,parenright,equal}
    bspc {desktop -f,node -d} '^{1,2,3,4,5,6,7,8,9,10,11,12}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

# power off
# super + alt + p; {h,r,s,l}
#     source $HOME/.cache/wal/colors.sh; \
#     echo "Yes\nNo\n" | dmenu -nb $color0 -nf $color15 -sb $color1 -sf $color15 -fn mono:size=10 \
#         -p "Please confirm this action: {halt,reboot,suspend,lock} this computer ?" | \
#         grep Yes >/dev/null && notify-send "debug" "systemd {halt,reboot,suspend,lock}"

# spawn a tabbed instance
# super + alt + t; s
#     source $HOME/.cache/wal/colors.sh; \
#     xidfile="$HOME/.cache/tabbed/tabbed-surf.xid" \
#     [ ! -r $xidfile ] \
#         && tabbed -o $background -O $foreground -t $color1 -T $cursor -u $color1 -U $color15 -dn "tabbed-surf" -c \
#             -r 2 surf -e '' -d `# no cache` -g `# no geodata` -s `# no js` -T `# strict TLS` "https://duckduckgo.com" > "$xidfile"
super + alt + t; s
     $HOME/.local/bin/surf-open.sh
#    source $HOME/.cache/wal/colors.sh; \
#    tabbed -o $background -O $foreground -t $color1 -T $cursor -u $color1 -U $color15 -n "tabbed-surf" -c \
#            -r 2 surf -e '' -z 1.2 -dgsT -- "https://duckduckgo.com"

# program launcher (tabbed-??)
#super + alt + t; ??
#    source $HOME/.cache/wal/colors.sh; \
#    tabbed -o $background -O $foreground -t $color1 -T $cursor -u $color1 -U $color15 -dn "tabbed-??" -c \
#        ??

# file manager: thunar
super + r
    pcmanfm

# transmission
super + b
    pgrep transmission-qt || transmission-qt

# ahoviewer
super + dollar
    ahoviewer

# anime
super + a
    ani-cli
    # FIXME path ?
    #PATH=$HOME/.local/bin:$PATH jerry --rofi

# youtube
super + v
    PATH=$HOME/.local/bin:$PATH ytdl-mpv

#super + alt + s; c
#    pgrep conky || conky -c ~/.config/conky/osd.conf && pkill conky

# super + alt + t; a
#     source $HOME/.cache/wal/colors.sh; \
#     nodes=$(bspc query -N -d focused); \
#     tab=$(bspc query -N -n focused) && [ $(xprop -id $tab | sed '/WM_CLASS/s/.*, "\(.*\)"/\1/p') == "tabbed" ] || \
#     tab=$(tabbed -c -d -n "tabbed-$(date +%s-%N)" -o $background -O $foreground -t $color1 -T $cursor -u $color1 -U $color15); \
#     for wid in $nodes; do \
#         xdotool windowreparent $wid $tab; \
#     done

# https://www.reddit.com/r/bspwm/comments/etfm3m/for_those_who_like_tabs/
# Add focused window to a tabbed instance in given direction
# super + alt + t; {h,j,k,l}
#     selected=$(bspc query -N -n {west,south,north,east}); \
#     if [ $(xprop -id $selected | sed '/WM_CLASS/s/.*, "\(.*\)"/\1/p') == "tabbed" ]; then \
#         notify-send 'sxhkd' "Not a tabbed instance"; \
#         tabbed=$(tabbed -c -d -n "tabbed-$(date +%s-%N)" -o $background -O $foreground -t $color1 -T $cursor -u $color1 -U $color15); \
#     else; \
#         tabbed=$selected; \
#     fi; \
#     wid=$(bspc query -N -n focused); \
#     notify-send DEBUG "$wid > $tabbed"; \
#     xdotool windowreparent $wid $tabbed

# Remove one tab from tabbed
# super + alt + t; r
#     tabbed=$(bspc query -N -n focused); root=$(xwininfo -root | awk '/Window id:/{print $4}'); \
#     child=$(xwininfo -id $tabbed -children | sed -n '/[0-9]\+ \(child\|children\):/,$s/ \+\(0x[0-9a-z]\+\).*/\1/p'| head -n1); \
#     notify-send DEBUG "$tabbed > $child > $root"; \
#     notify-send DEBUG "$(xwininfo -root | grep 'Window id:' | awk '{print $4}')"; \
#     xdotool windowreparent $child $root

# mode a window to scratchpad
super + alt + space
    id=$(bspc query -N -n "focused");\
    if [ -n "$id" ];then \
        xprop -id $id -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
        bspc node -t "floating";\
        xdotool windowunmap $id;\
    fi

# cycle through the scratchpad
super + space
    i=$(bspc query -N -n "focused.floating");\
    if [ -n "$i" ];then \
        xprop -id $i -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
        xdotool windowunmap $i;\
    else;\
        i=$(for w in $(xwininfo -root -children | grep -e "^\s*0x[0-9a-f]\+" -o);do \
            t=$(xprop -id $w _SCRATCH | grep ' = \(.*\)');\
            if [ -n "$t" ];then \
                echo $t $w;\
            fi;\
        done|sort -n|head -n1|cut -d" " -f 5);\
        if [ -n "$i" ];then \
            xprop -id $i -remove _SCRATCH;\
            bspc rule -a \* state=floating sticky=on center=on --one-shot;\
            xdotool windowmap $i;\
            bspc node -f $i;\
        fi;\
    fi

#
# Multimedia keys
#

# audio
XF86AudioMute
    pactl set-sink-mute 0 toggle
XF86AudioLowerVolume
    sh -c "pactl set-sink-mute 0 false ; pactl set-sink-volume 0 -5%"
XF86AudioRaiseVolume
    sh -c "pactl set-sink-mute 0 false ; pactl set-sink-volume 0 +5%"
XF86AudioMicMute
    pactl set-source-mute 1 toggle

# music
XF86AudioPlay
    playerctl -a play-pause
XF86AudioStop
    playerctl -a stop
XF86AudioNext
    playerctl -a next
XF86AudioPrev
    playerctl -a previous

# backlight
XF86MonBrightnessUp
    true
XF86MonBrightnessDown
    true

# webcam
XF86WebCam
    ~/.local/bin/camtoggle

#
# custom
#
super + alt + {colon,semicolon}
    wal -qi $(sxiv -o -t $HOME/Pictures/Wallpapers{_,/NSFW}) && killall iceblocks && bspc wm -r

super + {colon,semicolon}
    wal -qi $HOME/Pictures/Wallpapers{_,/NSFW} && killall iceblocks && bspc wm -r

# TODO add color scheme and video selector?
super + exclam
    export WALLPAPER=$(sxiv -o -t $HOME/Videos/Wallpapers); \
    (xwinwrap -g 1920x1080+0+0 -s -ni -nf -b -un -ov -- mpv -wid WID --load-scripts=no --x11-name=live-background-screen-0 --loop $WALLPAPER &);

super + {asterisk,mu}
    ~/.local/lib/i3cmds/dmenu{unicode,fontawesome}

{_,Shift +} Print
    notify-send "Screenshot" "$(scrot -D :0 {-m,-l style=dash,width=2 -sf} ~/Pictures/Screenshots/%Y-%m-%d-%T-{_,croped-}Screenshot.png && echo {full,croped})"

super + Print
    ~/.local/bin/shadowplay.sh save
#    notify-send "Cliped!" "$(killall -SIGUSR1 gpu-screen-recorder && echo Last 30s saved)"
